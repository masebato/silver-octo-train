# **Franquicias API**

API para gestionar franquicias, sucursales y productos. Esta API permite crear, leer, actualizar y eliminar informaciÃ³n relacionada con franquicias, sucursales y productos. AdemÃ¡s, estÃ¡ documentada con **OpenAPI** y puede visualizarse a travÃ©s de **Swagger UI**.

---

## **CaracterÃ­sticas**

- GestiÃ³n de **franquicias**:
  - Crear una nueva franquicia.
  - Actualizar el nombre de una franquicia.
- GestiÃ³n de **sucursales**:
  - Agregar una nueva sucursal a una franquicia.
  - Actualizar el nombre de una sucursal.
- GestiÃ³n de **productos**:
  - Agregar productos a una sucursal.
  - Actualizar el stock de un producto.
  - Eliminar un producto.
  - Consultar el producto con mÃ¡s stock por sucursal.
- DocumentaciÃ³n interactiva de la API con **Swagger UI**.

---

## **Requisitos Previos**

1. **Node.js**: Debes tener instalado Node.js (v14 o superior).
2. **Base de Datos**:
   - La API estÃ¡ diseÃ±ada para conectarse a una base de datos MySQL.
   - Puedes usar servicios como **Railway**, **AWS RDS**, o cualquier proveedor compatible con MySQL.

---

## **InstalaciÃ³n**

1. Clona este repositorio:
   ```bash
   git clone https://github.com/tu-usuario/franquicias-api.git
   cd franquicias-api
   ```

2. Instala las dependencias:
   ```bash
   npm install
   ```

3. Configura las variables de entorno:
   Crea un archivo `.env` en la raÃ­z del proyecto con el siguiente contenido:
   ```env
   PORT=3000
   DATABASE_URL=mysql://usuario:contraseÃ±a@localhost:3306/franchise_db
   ```

4. Configura la base de datos:
   - Crea una base de datos llamada `franchise_db`.
   - Ejecuta las migraciones:
     ```bash
     npx sequelize-cli db:migrate
     ```

---

## **EjecuciÃ³n**

1. Inicia el servidor:
   ```bash
   npm start
   ```

2. La API estarÃ¡ disponible en:
   ```
   http://localhost:3000
   ```

3. La documentaciÃ³n interactiva estarÃ¡ disponible en:
   ```
   http://localhost:3000/api-docs
   ```

---

## **Endpoints Principales**

### **Franquicias**
- **POST /api/franchises**: Crear una nueva franquicia.
- **PUT /api/franchises/:franchiseId**: Actualizar el nombre de una franquicia.

### **Sucursales**
- **POST /api/branches/add-to-franchise**: Agregar una sucursal a una franquicia.
- **PUT /api/branches/:branchId**: Actualizar el nombre de una sucursal.

### **Productos**
- **POST /api/products/add-to-branch**: Agregar un producto a una sucursal.
- **PUT /api/products/:productId/stock**: Actualizar el stock de un producto.
- **DELETE /api/products/:productId**: Eliminar un producto.
- **GET /api/products/top-stocked/:franchiseId**: Obtener el producto con mÃ¡s stock por sucursal.

---

## **TecnologÃ­as Utilizadas**

- **Node.js**: Framework para construir la API.
- **Express**: Framework minimalista para manejo de rutas y middlewares.
- **Sequelize**: ORM para gestionar la base de datos.
- **Swagger (OpenAPI)**: DocumentaciÃ³n interactiva de la API.
- **MySQL**: Base de datos relacional para persistencia.

---

## **Estructura del Proyecto**

```
franquicias-api/
â”œâ”€â”€ src/
â”‚   â”œâ”€â”€ controllers/     # Controladores para manejar la lÃ³gica de las rutas
â”‚   â”œâ”€â”€ models/          # Modelos definidos con Sequelize
â”‚   â”œâ”€â”€ routes/          # DefiniciÃ³n de rutas
â”‚   â”œâ”€â”€ services/        # LÃ³gica de negocio
â”‚   â”œâ”€â”€ swagger.js       # ConfiguraciÃ³n de Swagger
â”‚   â””â”€â”€ index.js         # Punto de entrada principal
â”œâ”€â”€ migrations/          # Migraciones para la base de datos
â”œâ”€â”€ openapi.yaml         # DocumentaciÃ³n de la API en formato OpenAPI
â”œâ”€â”€ package.json         # Dependencias y scripts
â”œâ”€â”€ README.md            # Este archivo
â””â”€â”€ .env                 # Variables de entorno (no se incluye en el repositorio)
```

---

## **Contribuciones**

Si deseas contribuir a este proyecto, sigue estos pasos:

1. Haz un fork del repositorio.
2. Crea una rama para tu contribuciÃ³n:
   ```bash
   git checkout -b feature/nueva-funcionalidad
   ```
3. Realiza los cambios y crea un commit:
   ```bash
   git commit -m "Agrega nueva funcionalidad"
   ```
4. Sube tus cambios:
   ```bash
   git push origin feature/nueva-funcionalidad
   ```
5. Crea un Pull Request.

---

## **Licencia**

Este proyecto estÃ¡ bajo la Licencia MIT. Consulta el archivo `LICENSE` para mÃ¡s detalles.

---

Si necesitas personalizar algo mÃ¡s del README o agregar detalles especÃ­ficos, Â¡hÃ¡zmelo saber! ðŸ˜Š

